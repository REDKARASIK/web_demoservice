services:
  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: orders_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./internal/db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d orders_db"]
      interval: 3s
      timeout: 3s
      retries: 30

  redpanda:
    image: redpandadata/redpanda:latest
    container_name: redpanda
    command:
      - redpanda
      - start
      - --mode=dev-container
      - --overprovisioned
      - --smp=1
      - --memory=1G
      - --reserve-memory=0M
      - --check=false
      - --set
      - redpanda.auto_create_topics_enabled=true
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      - --advertise-kafka-addr=PLAINTEXT://redpanda:9092,PLAINTEXT_HOST://localhost:9092
      - --rpc-addr=0.0.0.0:33145
      - --advertise-rpc-addr=redpanda:33145
    ports:
      - "9092:9093"
      - "9644:9644"
    healthcheck:
      test: [ "CMD", "bash", "-lc", "rpk cluster health --exit-when-healthy --api-urls=localhost:9644 || exit 1" ]
      interval: 3s
      timeout: 3s
      retries: 30


  console:
    image: redpandadata/console:latest
    container_name: redpanda-console
    environment:
      - KAFKA_BROKERS=redpanda:9092
    ports:
      - "8080:8080"
    depends_on:
      redpanda:
        condition: service_healthy

#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: order-service
#    ports:
#      - "8081:8081"
#    environment:
#      POSTGRES_DSN: host=postgres port=5432 user=admin password=admin dbname=orders_db sslmode=disable
#    depends_on:
#      - postgres
#    volumes:
#      -  .:/app
volumes:
  postgres_data: